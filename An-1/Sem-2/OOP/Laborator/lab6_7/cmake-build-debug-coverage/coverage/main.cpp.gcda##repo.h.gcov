        -:    0:Source:C:/Users/urdad/lab6_7/repo.h
        -:    0:Graph:C:\Users\urdad\lab6_7\cmake-build-debug-coverage\CMakeFiles\lab6_7.dir\main.cpp.gcno
        -:    0:Data:C:\Users\urdad\lab6_7\cmake-build-debug-coverage\CMakeFiles\lab6_7.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#ifndef REPO_H
        -:    3:#define REPO_H
        -:    4:
        -:    5:#include "domain.h"
        -:    6:#include "MyList.h"
        -:    7:#include <vector>
        -:    8:#include <algorithm>
        -:    9:#include <stdexcept>
        -:   10:#include <map>
        -:   11:#include <string>
        -:   12:#include <functional>
        -:   13:#include <random>
        -:   14:
        -:   15:
        -:   16:class RepositoryException : public std::runtime_error {
        -:   17:public:
function _ZN19RepositoryExceptionC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8 returned 100% blocks executed 100%
        8:   18:    explicit RepositoryException(const std::string& msg) : std::runtime_error(msg) {}
        8:   18-block  0
call    0 returned 8
        -:   19:};
        -:   20:
        -:   21:
        -:   22:class AbsRepo{
        -:   23:public:
        -:   24:    virtual void adauga(const Film& a)=0;
        -:   25:
        -:   26:    virtual void modifica(const std::string& titlu, int an, const std::string& nouGen, int nouAn, const std::string& nouActor)=0;
        -:   27:
        -:   28:    virtual void sterge(const std::string& titlu, int an)=0;
        -:   29:
        -:   30:    virtual const std::vector<Film>& getAll() const noexcept = 0;
        -:   31:    virtual void setAll(const std::vector<Film>& filmeNoi) noexcept=0;
        -:   32:    virtual const Film& cauta(const std::string& titlu, int an) const =0;
        -:   33:
function _ZN7AbsRepoD2Ev called 18 returned 100% blocks executed 100%
       18:   34:    virtual ~AbsRepo()=default;
        -:   35:};
        -:   36:
        -:   37:
        -:   38:
        -:   39:class Repo : public AbsRepo{
        -:   40:private:
        -:   41:    std::vector<Film> filme;
        -:   42:
        -:   43:public:
function _ZN4RepoC2Ev called 3 returned 100% blocks executed 100%
        3:   44:    Repo() = default;
        3:   44-block  0
call    0 returned 3
call    1 returned 3
        -:   45:    virtual void adauga(const Film& film);
        -:   46:    virtual void sterge(const std::string& titlu, int an);
        -:   47:    virtual void modifica(const std::string& titlu, int an, const std::string& nouGen, int nouAn, const std::string& nouActor);
        -:   48:    virtual const Film& cauta(const std::string& titlu, int an) const;
function _ZNK4Repo6getAllEv called 61 returned 100% blocks executed 100%
       61:   49:    virtual const std::vector<Film>& getAll() const noexcept {return filme;}
       61:   49-block  0
function _ZN4Repo6setAllERKSt6vectorI4FilmSaIS1_EE called 3 returned 100% blocks executed 100%
        3:   50:    virtual void setAll(const std::vector<Film>& filmeNoi) noexcept{
        3:   51:        filme = std::move(filmeNoi);
        3:   51-block  0
call    0 returned 3
call    1 returned 3
        3:   52:    }
        -:   53:    virtual ~Repo();
        -:   54:};
        -:   55:
        -:   56:class RepoFile :public Repo {
        -:   57:private:
        -:   58:
        -:   59:    std::string numeFisier;
        -:   60:
        -:   61:
        -:   62:public:
        -:   63:    void writeAllToFile();
        -:   64:
        -:   65:    void readAllFromFile();
function _ZN8RepoFileC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 3 returned 100% blocks executed 62%
        3:   66:    RepoFile(std::string numeFisier) :Repo(), numeFisier{ numeFisier } {
        3:   66-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:   67:        readAllFromFile();
        3:   67-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   68:    }
        3:   68-block  0
    $$$$$:   68-block  1
call    0 never executed
    $$$$$:   68-block  2
call    1 never executed
        -:   69:
function _ZN8RepoFile6adaugaERK4Film called 4 returned 100% blocks executed 100%
        4:   70:    void adauga(const Film& film) override {
        4:   71:        Repo::adauga(film);
        4:   71-block  0
call    0 returned 4
        4:   72:        writeAllToFile();
call    0 returned 4
        4:   73:    }
        -:   74:
function _ZN8RepoFile8modificaERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS7_iS7_ called 1 returned 100% blocks executed 100%
        1:   75:    void modifica(const std::string& titlu, int an, const std::string& nouGen, int nouAn, const std::string& nouActor) override {
        1:   76:        Repo::modifica(titlu,an,nouGen,nouAn,nouActor);
        1:   76-block  0
call    0 returned 1
        1:   77:        writeAllToFile();
call    0 returned 1
        1:   78:    }
        -:   79:
function _ZN8RepoFile6stergeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi called 4 returned 100% blocks executed 100%
        4:   80:    void sterge(const std::string& titlu, int an) override {
        4:   81:        Repo::sterge(titlu,an);
        4:   81-block  0
call    0 returned 4
        4:   82:        writeAllToFile();
call    0 returned 4
        4:   83:    }
        -:   84:
        -:   85:
       3*:   86:    ~RepoFile() override {
       3*:   87:    }
------------------
_ZN8RepoFileD0Ev:
function _ZN8RepoFileD0Ev called 0 returned 0% blocks executed 0%
    #####:   86:    ~RepoFile() override {
    #####:   87:    }
    %%%%%:   87-block  0
call    0 never executed
call    1 never executed
------------------
_ZN8RepoFileD1Ev:
function _ZN8RepoFileD1Ev called 3 returned 100% blocks executed 100%
        3:   86:    ~RepoFile() override {
        3:   87:    }
        3:   87-block  0
call    0 returned 3
call    1 returned 3
------------------
        -:   88:};
        -:   89:
        -:   90:class RepoNou : public AbsRepo {
        -:   91:private:
        -:   92:
        -:   93:	std::map<std::string, Film> filme;
        -:   94:	float probabilitate;
function _ZN7RepoNou14aruncaExceptieEv called 7 returned 100% blocks executed 82%
        7:   95:    bool aruncaExceptie() {
        7:   96:        std::random_device rd;
        7:   96-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   97:        std::mt19937 gen(rd());
        7:   97-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   97-block  1
call    3 returned 7
branch  4 taken 7 (fallthrough)
branch  5 taken 0 (throw)
        7:   98:        std::uniform_real_distribution<> dis(0.0, 1.0);
        7:   98-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:   99:        float val = dis(gen);
        7:   99-block  0
call    0 returned 7
branch  1 taken 7 (fallthrough)
branch  2 taken 0 (throw)
        7:  100:        return val < probabilitate;
        7:  100-block  0
        7:  101:    }
        7:  101-block  0
call    0 returned 7
    $$$$$:  101-block  1
call    1 never executed
        -:  102:
        -:  103:public:
        -:  104:
        -:  105:	RepoNou() = default;
function _ZN7RepoNouC1Ef called 5 returned 80% blocks executed 86%
        5:  106:    explicit RepoNou(float chance) : probabilitate(chance) {
        5:  106-block  0
call    0 returned 5
call    1 returned 5
        5:  107:        if (probabilitate < 0.0 || probabilitate > 1.0) {
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        4:  107-block  0
branch  2 taken 0 (fallthrough)
branch  3 taken 4
        1:  108:            throw std::invalid_argument("Probabilitatea trebuie sa fie intre 0 si 1.");
        1:  108-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  108-block  1
call    4 returned 1
    $$$$$:  108-block  2
call    5 never executed
        -:  109:        }
        6:  110:    }
        4:  110-block  0
        1:  110-block  1
call    0 returned 1
        1:  110-block  2
call    1 returned 1
        -:  111:
function _ZN7RepoNou6adaugaERK4Film called 3 returned 67% blocks executed 68%
        3:  112:    void adauga(const Film& film) override {
        3:  113:        if (aruncaExceptie()) {
        3:  113-block  0
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        3:  114:            throw RepositoryException("Eroare: A fost aruncată o excepție la adăugarea unui film.");
        1:  114-block  0
call    0 returned 1
        1:  114-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  114-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  114-block  3
call    7 returned 1
        1:  114-block  4
call    8 returned 0
    $$$$$:  114-block  5
call    9 never executed
    $$$$$:  114-block  6
    $$$$$:  114-block  7
    $$$$$:  114-block  8
call   10 never executed
        -:  115:        }
        2:  116:        filme[film.getTitlu()] = film;
        2:  116-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:  117:    }
        -:  118:
function _ZN7RepoNou6stergeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi called 2 returned 50% blocks executed 68%
        2:  119:	void sterge(const std::string& titlu, int an) override {
        2:  120:        if (aruncaExceptie()) {
        2:  120-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  120-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 1
        3:  121:            throw RepositoryException("Eroare: A fost aruncată o excepție la ștergerea unui film.");
        1:  121-block  0
call    0 returned 1
        1:  121-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  121-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  121-block  3
call    7 returned 1
        1:  121-block  4
call    8 returned 1
    $$$$$:  121-block  5
call    9 never executed
    $$$$$:  121-block  6
    $$$$$:  121-block  7
    $$$$$:  121-block  8
call   10 never executed
        -:  122:        }
        1:  123:        auto it = filme.find(titlu);
        1:  123-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  124:        if (it != filme.end()) {
        1:  124-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  125:            filme.erase(it);
        1:  125-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  126:        }
        1:  127:	}
        1:  127-block  0
        -:  128:
function _ZN7RepoNou8modificaERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS7_iS7_ called 2 returned 50% blocks executed 73%
        2:  129:	void modifica(const std::string& titlu, int an, const std::string& nouGen, int nouAn, const std::string& nouActor) override {
        2:  130:        if (aruncaExceptie()) {
        2:  130-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  130-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 1
        3:  131:            throw RepositoryException("Eroare: A fost aruncată o excepție la modificarea unui film.");
        1:  131-block  0
call    0 returned 1
        1:  131-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  131-block  2
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  131-block  3
call    7 returned 1
        1:  131-block  4
call    8 returned 1
    $$$$$:  131-block  5
call    9 never executed
    $$$$$:  131-block  6
    $$$$$:  131-block  7
    $$$$$:  131-block  8
call   10 never executed
        -:  132:        }
        1:  133:        auto it = filme.find(titlu);
        1:  133-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  134:        if (it != filme.end()) {
        1:  134-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  135:            it->second.setGen(nouGen);
        1:  135-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  136:            it->second.setAn(nouAn);
        1:  136-block  0
call    0 returned 1
call    1 returned 1
        1:  137:            it->second.setActor(nouActor);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:  138:        }
        1:  139:	}
        1:  139-block  0
        -:  140:
function _ZNK7RepoNou5cautaERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi called 2 returned 100% blocks executed 90%
        2:  141:    const Film& cauta(const std::string& titlu, int an) const override {
        2:  142:        auto it = filme.find(titlu);
        2:  142-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  143:        if (it != filme.end()) {
        2:  143-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0
        4:  144:            return it->second;}}
        2:  144-block  0
call    0 returned 2
        2:  144-block  1
        -:  145:
function _ZNK7RepoNou6getAllEv called 2 returned 100% blocks executed 100%
        2:  146:    const std::vector<Film>& getAll() const noexcept override {
        2:  147:        static std::vector<Film> listaFilme;
        2:  147-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:  147-block  1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:  147-block  2
call    5 returned 1
call    6 returned 1
        2:  148:        listaFilme.clear();
        2:  148-block  0
call    0 returned 2
        5:  149:        for (const auto& pair : filme) {
call    0 returned 2
call    1 returned 2
        3:  149-block  0
call    2 returned 3
call    3 returned 3
        5:  149-block  1
call    4 returned 5
branch  5 taken 3
branch  6 taken 2 (fallthrough)
        3:  150:            listaFilme.push_back(pair.second);
call    0 returned 3
        -:  151:        }
        2:  152:        return listaFilme;
        2:  152-block  0
        -:  153:    }
        -:  154:
        -:  155:
function _ZN7RepoNou6setAllERKSt6vectorI4FilmSaIS1_EE called 1 returned 100% blocks executed 100%
        1:  156:    void setAll(const std::vector<Film>& filmeNoi) noexcept override {
        1:  157:        filme.clear();
        1:  157-block  0
call    0 returned 1
        3:  158:        for (const auto& film : filmeNoi) {
call    0 returned 1
call    1 returned 1
        2:  158-block  0
call    2 returned 2
call    3 returned 2
        3:  158-block  1
call    4 returned 3
branch  5 taken 2
branch  6 taken 1 (fallthrough)
        2:  159:            filme[film.getTitlu()] = film;
call    0 returned 2
call    1 returned 2
call    2 returned 2
        -:  160:        }
        1:  161:    }
        -:  162:
       4*:  163:	~RepoNou() override {}
------------------
_ZN7RepoNouD0Ev:
function _ZN7RepoNouD0Ev called 0 returned 0% blocks executed 0%
    #####:  163:	~RepoNou() override {}
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
------------------
_ZN7RepoNouD1Ev:
function _ZN7RepoNouD1Ev called 4 returned 100% blocks executed 100%
        4:  163:	~RepoNou() override {}
        4:  163-block  0
call    0 returned 4
call    1 returned 4
------------------
        -:  164:};
        -:  165:
        -:  166:
        -:  167:#endif //REPO_H
