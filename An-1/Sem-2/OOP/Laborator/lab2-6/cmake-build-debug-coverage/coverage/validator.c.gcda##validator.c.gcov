        -:    0:Source:C:/Users/urdad/lab2-6/validator.c
        -:    0:Graph:C:\Users\urdad\lab2-6\cmake-build-debug-coverage\CMakeFiles\lab2_6.dir\validator.c.gcno
        -:    0:Data:C:\Users\urdad\lab2-6\cmake-build-debug-coverage\CMakeFiles\lab2_6.dir\validator.c.gcda
        -:    0:Runs:1
        -:    1:#include<string.h>
        -:    2:#include "validator.h"
        -:    3:#define ERROR_INVALID_ZI    3
        -:    4:#define ERROR_INVALID_SUMA  4
        -:    5:#define ERROR_INVALID_TIP   5
        -:    6:
        -:    7:
function valideaza_zi called 10 returned 100% blocks executed 100%
       10:    8:int valideaza_zi(int zi) {
        -:    9:    /**
        -:   10:     * Functie de validare a zilei cheltuielii.
        -:   11:     * Verifica daca ziua este valida.
        -:   12:     *
        -:   13:     * @param zi Ziua cheltuielii.
        -:   14:     *
        -:   15:     * @return 0 daca ziua este valida,
        -:   16:     *         3 daca nu este valida.
        -:   17:     */
       10:   18:    if (zi < 1 || zi > 31) {
       10:   18-block  0
branch  0 taken 10 (fallthrough)
branch  1 taken 0
       10:   18-block  1
branch  2 taken 2 (fallthrough)
branch  3 taken 8
        2:   19:        return ERROR_INVALID_ZI ;
        2:   19-block  0
        -:   20:    }
        8:   21:    return 0;
        8:   21-block  0
        -:   22:}
        -:   23:
function valideaza_suma called 8 returned 100% blocks executed 100%
        8:   24:int valideaza_suma(float suma) {
        -:   25:    /**
        -:   26:     * Functie de validare a sumei cheltuielii.
        -:   27:     * Verifica daca suma este valida.
        -:   28:     *
        -:   29:     * @param suma Suma cheltuielii.
        -:   30:     *
        -:   31:     * @return 0 daca suma este valida,
        -:   32:     *         4 daca nu este valida.
        -:   33:     */
        8:   34:    if (suma <= 0) {
        8:   34-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 6
        2:   35:        return ERROR_INVALID_SUMA;
        2:   35-block  0
        -:   36:    }
        6:   37:    return 0;
        6:   37-block  0
        -:   38:}
        -:   39:
function valideaza_tip called 6 returned 100% blocks executed 100%
        6:   40:int valideaza_tip(const char *tip) {
        -:   41:    /**
        -:   42:     * Functie de validare a tipului cheltuielii.
        -:   43:     * Verifica daca tipul este valid.
        -:   44:     *
        -:   45:     * @param tip Tipul cheltuielii.
        -:   46:     *
        -:   47:     * @return 0 daca tipul este valid,
        -:   48:     *         5 daca nu este valid.
        -:   49:     */
        6:   50:    const char *tipuri[] = {"mancare", "transport", "telefon&internet", "imbracaminte", "altele"};
       25:   51:    for (int i = 0; i < 5; i++) {
        6:   51-block  0
       19:   51-block  1
       25:   51-block  2
branch  0 taken 23
branch  1 taken 2 (fallthrough)
       23:   52:        if (strcmp(tipuri[i], tip) == 0)
       23:   52-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 19
        4:   53:            return 0;
        4:   53-block  0
        -:   54:    }
        2:   55:    return ERROR_INVALID_TIP;
        2:   55-block  0
        -:   56:}
        -:   57:
